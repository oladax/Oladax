import React, { useState } from 'react';
import emailjs from 'emailjs-com';
import './contact.css';
import svg from './Images/undraw_team_spirit_re_yl1v.svg'
import {faLinkedin, faFacebook, faWhatsapp, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';

function Contact() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: '',
  });

  const [errors, setErrors] = useState({});

  const handleChange = (event) => {
    const { name, value } = event.target;
    setFormData((prevFormData) => ({
      ...prevFormData,
      [name]: value,
    }));
  };

  const validateForm = () => {
    const { name, email, message } = formData;
    const errors = {};

    // Regular expression for email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    // Validate name field
    if (!name.trim()) {
      errors.name = 'Name is required';
    }

    // Validate email field
    if (!email.trim()) {
      errors.email = 'Email is required';
    } else if (!emailRegex.test(email)) {
      errors.email = 'Invalid email address';
    }

    // Validate message field
    if (!message.trim()) {
      errors.message = 'Message is required';
    }

    return errors;
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    const formErrors = validateForm();

    if (Object.keys(formErrors).length === 0) {
      sendEmail();
    } else {
      setErrors(formErrors);
    }
  };

  const sendEmail = () => {
    const serviceID = 'service_uf9lhaz';
    const templateID = 'template_b65h425';
    const userID = 'pr6ImLwlWeomB8shk';

    emailjs.send(serviceID, templateID, formData, userID)
      .then((response) => {
        console.log('Email sent successfully:', response);
        alert('Email sent successfully!');
        setFormData({
          name: '',
          email: '',
          message: '',
        });
        setErrors({});
      })
      .catch((error) => {
        console.error('Failed to send email:', error);
        alert('Failed to send email');
      });
  };

  return (
    <div className="contact">
       <div className='contact-intro'>
         <p>Contact me</p>
         <h2>Got a question or proposal, or just want to say hello? Go ahead</h2>
         <h2></h2>
        </div>
      <div className="contact-container">
        <div className="svg">
          <div className="text">
            <p>I need to reach out to oladax, I need a portfolio webiste for my business.</p>
          </div>

          <div className="text">
            <p>I Am just going to reach out to oladax for the design designüèÉüèæ‚Äç‚ôÄÔ∏è.</p>
          </div>

          <div className="text">
            <p>I will handle this website to oladax to clone for me. He's the best!</p>
          </div>
          <img src={svg}/>
          <div className="social-media-icons">
              <a href='https://web.facebook.com/olamide.daniel.581/?_rdc=1&_rdr' className="social-media-icon">
              <FontAwesomeIcon icon={faFacebook} />
            </a>
            <a href="https://api.whatsapp.com/message/MQX3O3MI2UR4L1?autoload=1&app_absent=0">
                  <FontAwesomeIcon icon={faWhatsapp} className="social-media-icon" />
                </a>
            <a href='mailto:danielolamide141@gmail.com ' className="social-media-icon">
              <FontAwesomeIcon icon={faGoogle} />
            </a>
            <a href='https://www.linkedin.com/in/olamide-daniel-812039243?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3BBgGEK%2BqMSaqM3amwcmgV2Q%3D%3D' className="social-media-icon">
              <FontAwesomeIcon icon={faLinkedin} />
            </a>
            <a href='#' className="social-media-icon">
              <FontAwesomeIcon icon={faTwitter} />
            </a>
               
              </div>
        </div>
        <div className="form-container">
          <h3>Send me a direct message!</h3>
        <form onSubmit={handleSubmit}>
      <div className='name'>
        <label htmlFor="name">What's your name?</label>
        <input
          type="text"
          id="name"
          name="name"
          value={formData.name}          
          onChange={handleChange}
          placeholder='Olamide Daniel'
        />
        {errors.name && <span>{errors.name}</span>}
      </div>

      <div className='email'>
        <label htmlFor="email">What's your email?</label>
        <input
          type="email"
          id="email"
          name="email"
          value={formData.email}
          onChange={handleChange}
          placeholder='oladax@protonmail.com'
        />
        {errors.email && <span>{errors.email}</span>}
      </div>

      <div className='message'>
        <label htmlFor="message">How can I help?</label>
        <textarea
          id="message"
          name="message"
          placeholder='Start your message'
          rows={3}
          value={formData.message}
          onChange={handleChange}
        />
        {errors.message && <span>{errors.message}</span>}
      </div>

   <div className="butdiv">
   <button type="submit">Send Message</button>
   <span>or</span>
   <button><a href="mailto:danielolamide141@gmail.com">Send Email</a></button>
   </div>
    </form>
        </div>

      </div>
    </div>

    
  );
}

export default Contact;
